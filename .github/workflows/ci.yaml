jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v1
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Cache Maven
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: (github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/main')
        || !startsWith(env.JAVA_HOME, '/opt/hostedtoolcache/jdk/8')
      name: Unit Tests
      run: ./mvnw -V test --no-transfer-progress
    - continue-on-error: true
      if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
        && startsWith(env.JAVA_HOME, '/opt/hostedtoolcache/jdk/8')
      name: Unit Tests with Coverage
      run: './mvnw -V jacoco:prepare-agent test jacoco:report --no-transfer-progress

        '
    - continue-on-error: true
      env:
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      if: github.ref == 'refs/heads/develop' && startsWith(env.JAVA_HOME, '/opt/hostedtoolcache/jdk/8')
      name: Deploy to sonatype-snapshots
      run: "set -e\ncat > settings.xml <<EOF\n<settings>\n  <servers>\n    <server>\n\
        \       <id>sonatype-snapshots</id>\n       <username>${SONATYPE_USERNAME}</username>\n\
        \       <password>${SONATYPE_PASSWORD}</password>\n    </server>\n  </servers>\n\
        </settings>\nEOF\nCURRENT_VERSION=$(grep '<version>' pom.xml | head -n 1 |\
        \ sed -e 's|<version>||g' -e 's|</version>||g' | xargs echo)\nif [ \"${CURRENT_VERSION}\"\
        \ = \"$(echo ${CURRENT_VERSION} | grep \"\\-SNAPSHOT\")\" ];then\n  ./mvnw\
        \ -V deploy -s settings.xml -DskipTests=true -DserverId=sonatype-snapshots\
        \ --no-transfer-progress\nfi\n"
    - continue-on-error: true
      env:
        ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      if: github.ref == 'refs/heads/main' && startsWith(env.JAVA_HOME, '/opt/hostedtoolcache/jdk/8')
      name: Deploy to sonatype-releases
      run: "set -e\ndocker run \\\n  --rm \\\n  -e SONATYPE_USERNAME=${SONATYPE_USERNAME}\
        \ \\\n  -e SONATYPE_PASSWORD=${SONATYPE_PASSWORD} \\\n  -e GPG_KEYNAME=${GPG_KEYNAME}\
        \ \\\n  -e GPG_PASSPHRASE=${GPG_PASSPHRASE} \\\n  -e ENCRYPTION_PASSWORD=${ENCRYPTION_PASSWORD}\
        \ \\\n  -v ~/.m2:/root/.m2 \\\n  -v \"$PWD\":/workspace \\\n  -w /workspace\
        \ \\\n  making/deploy-sonatype\n"
    strategy:
      matrix:
        java:
        - 8.x
        - 11.x
        - 17.x
        - 21.x
  code-formatting:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v1
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - continue-on-error: true
      name: Cache Maven
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Check formatting
      run: ./mvnw formatter:validate --no-transfer-progress
name: CI
on:
  repository_dispatch:
    types: trigger-ga___ci.yaml
